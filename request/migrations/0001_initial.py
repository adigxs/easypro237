# Generated by Django 5.0.1 on 2024-01-19 12:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150)),
                ('slug', models.SlugField()),
                ('type', models.CharField(db_index=True, max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(editable=False, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(editable=False, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_document', models.CharField(choices=[('CRIMINAL RECORD', 'CRIMINAL RECORD'), ('CERTIFICATE OF NON CONVICTION', 'CERTIFICATE OF NON CONVICTION')], max_length=150)),
                ('format', models.CharField(choices=[('PHYSICAL COPY', 'PHYSICAL COPY'), ('SCANNED COPY', 'SCANNED COPY'), ('DUAL COPY', 'DUAL COPY')], max_length=150)),
                ('cost', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_index=True, max_length=150)),
                ('last_name', models.CharField(db_index=True, max_length=150)),
                ('court', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='request.court')),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(editable=False, max_length=150)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='request.department')),
            ],
            options={
                'verbose_name_plural': 'Municipalities',
            },
        ),
        migrations.AddField(
            model_name='court',
            name='municipality',
            field=models.ManyToManyField(blank=True, db_index=True, to='request.municipality'),
        ),
        migrations.AddField(
            model_name='department',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='request.region'),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=12)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('STARTED', 'STARTED'), ('PENDING', 'PENDING'), ('COMPLETED', 'COMPLETED')], db_index=True, default=('STARTED', 'STARTED'), max_length=15)),
                ('user_first_name', models.CharField(db_index=True, help_text='First name of the client requesting the service', max_length=150)),
                ('user_last_name', models.CharField(db_index=True, help_text='Last name of the client requesting the service', max_length=150)),
                ('user_middle_name', models.CharField(db_index=True, help_text='Middle name of client requesting the service', max_length=150)),
                ('user_gender', models.CharField(choices=[('MALE', 'M'), ('FEMALE', 'F')], db_index=True, help_text='Gender of client requesting the service', max_length=6)),
                ('user_id_scan', models.FileField(db_index=True, help_text='ID card scan of client requesting the service', upload_to='SCANS')),
                ('user_phone_number_1', models.CharField(db_index=True, help_text='1st phone number of the client requesting the service', max_length=15)),
                ('user_phone_number_2', models.CharField(db_index=True, help_text='2nd phone number of the client  of client requesting the service', max_length=15)),
                ('user_whatsapp_number', models.CharField(db_index=True, help_text='Whatsapp phone number of client requesting the service', max_length=15)),
                ('user_email', models.FileField(db_index=True, help_text='Email of client requesting the service', max_length=150, upload_to='')),
                ('user_dob', models.DateField(blank=True, db_index=True, null=True, verbose_name='Date of birth')),
                ('user_cob', models.CharField(blank=True, db_index=True, max_length=150, null=True, verbose_name='Country of birth')),
                ('user_residency_country', models.CharField(blank=True, db_index=True, max_length=150, null=True, verbose_name='Country of residency')),
                ('user_nationality', models.CharField(blank=True, db_index=True, max_length=150, null=True, verbose_name='Nationality of client requesting the service')),
                ('user_occupation', models.CharField(blank=True, db_index=True, max_length=150, null=True, verbose_name='Occupation of the client requesting the service')),
                ('user_marital_status', models.CharField(blank=True, choices=[('MARRIED', 'MARRIED'), ('SINGLE', 'SINGLE'), ('DIVORCED', 'DIVORCED')], db_index=True, max_length=150, null=True, verbose_name='Marital status of the client requesting the service')),
                ('has_stayed_in_cameroon', models.BooleanField(default=True)),
                ('copy_count', models.PositiveIntegerField(default=1)),
                ('user_pob', models.ForeignKey(blank=True, help_text='Municipality of birth', max_length=150, null=True, on_delete=django.db.models.deletion.SET_NULL, to='request.municipality')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='request.service')),
            ],
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(editable=False, max_length=150)),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='request.municipality')),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport_company', models.CharField(db_index=True, max_length=150)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='request.agent')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='request.request')),
                ('destination', models.ForeignKey(blank=True, help_text='Destination where a requested document will be shipped', null=True, on_delete=django.db.models.deletion.SET_NULL, to='request.town')),
            ],
        ),
    ]
